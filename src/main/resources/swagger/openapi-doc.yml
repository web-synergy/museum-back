openapi: 3.0.1

info:
  title: Kavaleridze Museum Website API
  description: |
    The Kavaleridze Museum API is a comprehensive RESTful API
    that serves as the backbone of the Kavaleridze Museum's digital platform.
    This API empowers visitors to interact with museum-related content,
    enhancing the overall visitor experience.
  version: v0.0.1

servers:
  - url: https://130.61.247.149/api
    description: Service for  website API of the Kavaleridze museum

tags:
  - name: Events
    description: |
      Endpoints for retrieving museum events.
      Allows users to view event details, search for events, and more.
  - name: Images
    description: |
      Endpoints to retrieve and display images from the storage.
      Provides access to images for use on the website.
  - name: Feedback
    description: |
      Endpoints for email communications, including sending feedback and inquiries.
      Enables communication with museum staff.
  - name: Search
    description: |
      Endpoints for performing searches on the website.
      Allows users to search for events, articles, and more.
  - name: Museum Data
    description: |
      Endpoints for retrieving museum data in the public API.
      This API handles public operations with museum data.

paths:
  /images:
    get:
      tags:
        - Images
      operationId: getImage
      parameters:
        - name: filename
          in: query
          required: true
          schema:
            type: string
        - name: type
          in: query
          required: true
          schema:
            type: string
            enum:
              - ORIGINAL
              - PREVIEW
      responses:
        200:
          description: OK
          content:
            image/jpeg:
              schema:
                type: string
                format: byte
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /feedback/submit:
    post:
      tags:
        - Feedback
      operationId: submitContactForm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailDto'
        required: true
      responses:
        204:
          description: Email sent successfully
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /events:
    get:
      tags:
        - Events
      summary: Get a page of events
      description: Retrieves a page of events with the specified size and page number.
      operationId: getAll
      parameters:
        - name: size
          in: query
          description: Size of the page
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Page number
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Page of events retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageEvent'
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /events/{id}:
    get:
      tags:
        - Events
      summary: Get an Event by ID
      description: Retrieves an Event by its unique identifier.
      operationId: getById
      parameters:
        - name: id
          in: path
          description: Unique identifier of the Event
          required: true
          schema:
            type: string
      responses:
        200:
          description: Event retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Event not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /search/{query}:
    get:
      tags:
        - Search
      summary: Perform a full text search search
      description: Performs a full text search search in the website content based on the provided query string.
      operationId: search
      parameters:
        - name: query
          in: path
          description: Search query string
          required: true
          schema:
            minLength: 3
            maxLength: 120
            type: string
      responses:
        200:
          description: Search results retrieved successfully or an empty payload
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchResponse'
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /museum_data:
    get:
      tags:
        - Museum Data
      description: 'Retrieves available museum data'
      operationId: getMuseumData
      responses:
        200:
          description: Data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MuseumInfo'
        404:
          description: Data not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    ErrorResponse:
      description: Error message with timestamp
      type: object
      properties:
        message:
          type: string
        timestamp:
          type: integer
          format: int64
    EventResponse:
      description: Event information
      type: object
      properties:
        id:
          type: string
        title:
          type: string
          maxLength: 100
          nullable: false
        summary:
          type: string
          nullable: false
          maxLength: 150
        description:
          type: string
          nullable: false
          maxLength: 2000
        type:
          type: string
          nullable: false
          enum:
            - EXHIBITION
            - EXCURSION
            - PRESENTATION
            - CONTEST
            - LECTURE
            - MASTER_CLASS
            - CREATIVE_EVENING
            - OTHER
        status:
          type: string
          nullable: false
          enum:
            - DRAFT
            - PUBLISHED
        banner:
          type: string
        begin:
          type: string
          format: date
        end:
          type: string
          format: date
        created:
          type: string
          format: date
    MailDto:
      description: Feedback form
      required:
        - email
        - firstName
        - lastName
        - message
      type: object
      properties:
        firstName:
          type: string
          minLength: 2
          maxLength: 30
          nullable: false
        lastName:
          type: string
          minLength: 2
          maxLength: 30
          nullable: false
        email:
          type: string
          format: email
          nullable: false
        message:
          type: string
          minLength: 10
          maxLength: 300
          nullable: false
    SaveImageResponse:
      description: Id of saved image
      type: object
      properties:
        imageId:
          type: string
        originalUrl:
          type: string
    PageEvent:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        last:
          type: boolean
        sort:
          $ref: '#/components/schemas/SortObject'
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/EventResponse'
        number:
          type: integer
          format: int32
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
        sort:
          $ref: '#/components/schemas/SortObject'
        offset:
          type: integer
          format: int64
    SortObject:
      type: object
      properties:
        sorted:
          type: boolean
        unsorted:
          type: boolean
        empty:
          type: boolean
    SearchResponse:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        contentType:
          type: string
          enum:
            - ARTICLE
            - EVENT
    MuseumInfo:
      description: 'Represents museum data'
      type: object
      properties:
        id:
          description: 'The unique identifier for the museum data'
          type: string
        phoneNumber:
          description: 'The phone number associated with the museum'
          type: string
        email:
          description: 'The email address associated with the museum'
          type: string
          format: email
        subwayRoute:
          description: 'The subway route information for reaching the museum'
          type: string
        busRoute:
          description: 'The bus route information for reaching the museum'
          type: string
        funicularRoute:
          description: 'The funicular route information for reaching the museum'
          type: string
